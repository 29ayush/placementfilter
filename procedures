CREATE OR REPLACE PROCEDURE createuserstudent (IN pass varchar(30),IN username Varchar(50)   , IN FirstName Varchar(50)  , IN LastName Varchar(50)   , IN RollNo Int , IN Email Varchar(255)   , IN PCVId Varchar(500)   , IN PNo Int(10) , IN Gender enum('M','F') , IN Dept Varchar(50) , IN Programme  enum('BTECH','MTECH','PhD','MSc','BSc','BA','MA') , IN CGPA   Numeric(4,2) , IN address varchar(200)  , IN Privpub BIT(5)   , IN Verified BIT(1)) 
BEGIN 
    SELECT CURRENT_ROLE() into @role;
    SELECT USER() into @temp;
    SELECT SUBSTRING_INDEX(@temp, '@', 1) into @user;
    SET @commonins = "INSERT INTO LOGIN VALUES(";
    if(user="root" or role="role_admin" or role = "role_moderator")
        then
        if(username in (select Username from Login))
        then 
            SIGNAL SQLSTATE '50002' SET MESSAGE_TEXT = 'Username Already Exists';
        end if;
        INSERT INTO LOGIN VALUES(Username,PASSWORD(pass),"Student");

        SET @query1 = CONCAT(@commonins,Username,",",PASSWORD(pass),",","Student",")"); 
        SET @query2 = CONCAT("INSERT INTO ","Student"," VALUES(",username,",",FirstName,",",LastName,",",RollNo,",",Email,",",PCVId,",",PNo,",",Gender,",",Dept,",",Programme,",",CGPA,",",address,",",Privpub,",",0,")");
        SET @query3 = CONCAT("create user '",username,"'@'localhost' identified by '",pass,"'");
        SET @query4 = CONCAT("GRANT ","role_student"," to ",username,"@localhost");
        
        EXECUTE IMMEDIATE @query1;
        EXECUTE IMMEDIATE @query2;
        EXECUTE IMMEDIATE @query3;
        EXECUTE IMMEDIATE @query4;
    else 
        SIGNAL SQLSTATE '50001' SET MESSAGE_TEXT = 'Not enough priviliges';
    end if;
END;

-------------- 

CREATE OR REPLACE PROCEDURE createuserprof (IN pass varchar(30),IN username Varchar(50)   , IN Name Varchar(50)  , IN StaffId INT , IN Email Varchar(255)   , IN PNo Int(10) , IN Dept Varchar(50) ) 
BEGIN 
    SELECT CURRENT_ROLE() into @role;
    SELECT USER() into @temp;
    SELECT SUBSTRING_INDEX(@temp, '@', 1) into @user;
    SET @commonins = "INSERT INTO LOGIN VALUES(";
    if(user="root" or role="role_admin" or role = "role_moderator")
        then
        if(username in (select Username from Login))
        then 
            SIGNAL SQLSTATE '50002' SET MESSAGE_TEXT = 'Username Already Exists';
        end if;
        SET @query1 = CONCAT(@commonins,Username,",",PASSWORD(pass),",","Professor",")"); 
        SET @query2 = CONCAT("INSERT INTO ","Professor"," VALUES(",username,",",Name,",",StaffId,",",Dept,",",Email,",",PNo,")");
        SET @query3 = CONCAT("create user '",username,"'@'localhost' identified by '",pass,"'");
        SET @query4 = CONCAT("GRANT ","role_professor"," to ",username,"@localhost");
        
        EXECUTE IMMEDIATE @query1;
        EXECUTE IMMEDIATE @query2;
        EXECUTE IMMEDIATE @query3;
        EXECUTE IMMEDIATE @query4;
    else 
        SIGNAL SQLSTATE '50001' SET MESSAGE_TEXT = 'Not enough priviliges';
    end if;
END;

---------------------- 

CREATE OR REPLACE PROCEDURE createusermod (IN pass varchar(30),IN username Varchar(50)   , IN Name Varchar(50)  , IN Email Varchar(255) , IN PNo Int(10) ) 
BEGIN 
    SELECT CURRENT_ROLE() into @role;
    SELECT USER() into @temp;
    SELECT SUBSTRING_INDEX(@temp, '@', 1) into @user;
    SET @commonins = "INSERT INTO LOGIN VALUES(";
    if(user="root" or role="role_admin" or role = "role_moderator")
        then
        if(username in (select Username from Login))
        then 
            SIGNAL SQLSTATE '50002' SET MESSAGE_TEXT = 'Username Already Exists';
        end if;
        SET @query1 = CONCAT(@commonins,Username,",",PASSWORD(pass),",","Moderator",")"); 
        SET @query2 = CONCAT("INSERT INTO ","Moderator"," VALUES(",username,",",Name,",",Email,",",PNo,")");
        SET @query3 = CONCAT("create user '",username,"'@'localhost' identified by '",pass,"'");
        SET @query4 = CONCAT("GRANT ","role_moderator"," to ",username,"@localhost");
        
        EXECUTE IMMEDIATE @query1;
        EXECUTE IMMEDIATE @query2;
        EXECUTE IMMEDIATE @query3;
        EXECUTE IMMEDIATE @query4;
    else 
        SIGNAL SQLSTATE '50001' SET MESSAGE_TEXT = 'Not enough priviliges';
    end if;
END;

-----------------------------
CREATE OR REPLACE PROCEDURE createuseradmin (IN pass varchar(30),IN username Varchar(50)   , IN Email Varchar(255) , IN PNo Int(10) ) 
BEGIN 
    SELECT CURRENT_ROLE() into @role;
    SELECT USER() into @temp;
    SELECT SUBSTRING_INDEX(@temp, '@', 1) into @user;
    SET @commonins = "INSERT INTO LOGIN VALUES(";
    if(user="root" or role="role_admin" )
        then
        if(username in (select Username from Login))
        then 
            SIGNAL SQLSTATE '50002' SET MESSAGE_TEXT = 'Username Already Exists';
        end if;
        SET @query1 = CONCAT(@commonins,Username,",",PASSWORD(pass),",","Admin",")");  
        SET @query2 = CONCAT("INSERT INTO ","Admin"," VALUES(",username,",",Email,",",PNo,")");
        SET @query3 = CONCAT("create user '",username,"'@'localhost' identified by '",pass,"'");
        SET @query4 = CONCAT("GRANT ","role_admin"," to ",username,"@localhost");
        
        EXECUTE IMMEDIATE @query1;
        EXECUTE IMMEDIATE @query2;
        EXECUTE IMMEDIATE @query3;
        EXECUTE IMMEDIATE @query4;
    else 
        SIGNAL SQLSTATE '50001' SET MESSAGE_TEXT = 'Not enough priviliges';
    end if;
END;
-------------------------------
CREATE OR REPLACE PROCEDURE createusercr (IN pass varchar(30),IN username Varchar(50)   , IN Name Varchar(50)  ,  IN Email Varchar(255)   , IN PNo Int(10) , IN CID int) 
BEGIN 
    SELECT CURRENT_ROLE() into @role;
    SELECT USER() into @temp;
    SELECT SUBSTRING_INDEX(@temp, '@', 1) into @user;
    SET @commonins = "INSERT INTO LOGIN VALUES(";
    if(user="root" or role="role_admin" or role = "role_moderator")
        then
        if(username in (select Username from Login))
        then 
            SIGNAL SQLSTATE '50002' SET MESSAGE_TEXT = 'Username Already Exists';
        end if;
        SET @query1 = CONCAT(@commonins,Username,",",PASSWORD(pass),",","CR",")"); 
        SET @query2 = CONCAT("INSERT INTO ","CR"," VALUES(",username,",",Name,",",Email,",",PNo,",",CID,")");
        SET @query3 = CONCAT("create user '",username,"'@'localhost' identified by '",pass,"'");
        SET @query4 = CONCAT("GRANT ","role_cr"," to ",username,"@localhost");
        
        EXECUTE IMMEDIATE @query1;
        EXECUTE IMMEDIATE @query2;
        EXECUTE IMMEDIATE @query3;
        EXECUTE IMMEDIATE @query4;
    else 
        SIGNAL SQLSTATE '50001' SET MESSAGE_TEXT = 'Not enough priviliges';
    end if;
END;

-------------------------------
CREATE OR REPLACE PROCEDURE addinternship (CID INT ,Field Varchar(50), Description TEXT , MaxStu Int, MinStu Int, Approval BIT(1),MaxRounds int,PPO Bit(1),Duration integer,Stipend Numeric(12,2) )
BEGIN 
    SELECT CURRENT_ROLE() into @role;
    SELECT USER() into @temp;
    SELECT SUBSTRING_INDEX(@temp, '@', 1) into @user;
    SET @commonins = "INSERT INTO Postings(CID,Field,Description,MaxStu,MinStu,Approval,MaxRounds) VALUES(";
    SET @Q1 = CONCAT("Select CID from CR where Username=",@user);

    if(user="root" or role="role_admin" or role = "role_moderator" or role="role_cr")
        then
        if(role="role_cr" and @Q1 != CID)
        then 
            SIGNAL SQLSTATE '50002' SET MESSAGE_TEXT = 'NOT ENOUGH PRIVILIGES';
        end if;
        SET @query1 = CONCAT(@commonins,CID,",",Field,",",Description,",",MaxStu,",",MinStu,",",Approval,",",MaxRounds,")");
        EXECUTE IMMEDIATE @query1;
        SELECT LAST_INSERT_ID() into @PID;
        
        SET @query2 = CONCAT("INSERT INTO Internships"," VALUES(",@PID,",",PPO,",",Duration,",",Stipend,")");
        EXECUTE IMMEDIATE @query2;

    else 
        SIGNAL SQLSTATE '50001' SET MESSAGE_TEXT = 'Not enough priviliges';
    end if;
END;

------------------------------------------
CREATE OR REPLACE PROCEDURE addjobs (CID INT ,Field Varchar(50), Description TEXT , MaxStu Int, MinStu Int, Approval BIT(1),MaxRounds int,MaxPay Numeric(12,2),MinPay Numeric(12,2), Shift enum("Morning","Evening","Both"))
BEGIN 
    SELECT CURRENT_ROLE() into @role;
    SELECT USER() into @temp;
    SELECT SUBSTRING_INDEX(@temp, '@', 1) into @user;
    SET @commonins = "INSERT INTO Postings(CID,Field,Description,MaxStu,MinStu,Approval,MaxRounds) VALUES(";
    SET @Q1 = CONCAT("Select CID from CR where Username=",@user);

    if(user="root" or role="role_admin" or role = "role_moderator" or role="role_cr")
        then
        if(role="role_cr" and @Q1 != CID)
        then 
            SIGNAL SQLSTATE '50002' SET MESSAGE_TEXT = 'NOT ENOUGH PRIVILIGES';
        end if;
        SET @query1 = CONCAT(@commonins,CID,",",Field,",",Description,",",MaxStu,",",MinStu,",",Approval,",",MaxRounds,")");
        EXECUTE IMMEDIATE @query1;
        SELECT LAST_INSERT_ID() into @PID;
        
        SET @query2 = CONCAT("INSERT INTO Jobs"," VALUES(",@PID,",",MaxPay,",",MinPay,",",Shift,")");
        EXECUTE IMMEDIATE @query2;

    else 
        SIGNAL SQLSTATE '50001' SET MESSAGE_TEXT = 'Not enough priviliges';
    end if;
END;
----------------------------------------------
CREATE OR REPLACE PROCEDURE studentpriv ()
BEGIN 
    SELECT USER() into @temp;
    SELECT SUBSTRING_INDEX(@temp, '@', 1) into @user;
    SET @Q1 = CONCAT("Select * from Student where Username='",@user,"'");
    EXECUTE IMMEDIATE @Q1;
END;
------------------------------
CREATE OR REPLACE PROCEDURE takenpriv ()
BEGIN 
    SELECT USER() into @temp;
    SELECT SUBSTRING_INDEX(@temp, '@', 1) into @user;
    SELECT RollNo From Student where Username = @user into @rollno;
    Select * from Taken where RollNo=@rollno;
    EXECUTE IMMEDIATE @Q1;
END;
--------------------------------
