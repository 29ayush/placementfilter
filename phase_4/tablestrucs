Create TABLE Login (
    Username Varchar(50) PRimary Key,
    `Password` CHAR(32),
    Usertype enum("Student","Proffesor","Moderator","Admin","CR")
);

create TABLE Departments (
    Name VARCHAR(50) PRIMARY KEY 
)

Create TABLE Student (
    Username Varchar(50) Not NULL,
    FirstName Varchar(50) Not NULL,
    LastName Varchar(50) Not NULL,
    RollNo Int Primary Key, 
    Email Varchar(255),
    PCVId Varchar(500),
    PNo Int(10) NOT NULL,
    Gender enum('M','F'),
    Dept Varchar(50) NOT NULL,
    Programme  enum('BTECH','MTECH','PhD','MSc','BSc','BA','MA'),
    CGPA   Numeric(4,2) NOT NULL,
    current_address varchar(200),
    Privpub BIT(5) default 00000 NOT NULL,
    Verified BIT(1) default 0,
    Foreign Key (Username) REFERENCES Login(Username) ON DELETE CASCADE,
    Foreign Key (Dept) REFERENCES Departments(Name) ON DELETE CASCADE,
    Foreign Key (Dept) REFERENCES Departments(Name) ON UPDATE CASCADE
);



Create TABLE Professor (
    Username Varchar(50) Not Null,
    Name Varchar(50) Not NULL,
    StaffId Int Primary Key, 
    Profile VARCHAR(500),
    Foreign Key (Username) REFERENCES Login(Username) ON DELETE CASCADE
);


Create TABLE Moderator (
    Username Varchar(50) PRIMARY KEY,
    Name Varchar(50) Not NULL,
    Email Varchar(255),
    PNo    Int,
    Foreign Key (Username) REFERENCES Login(Username) ON DELETE CASCADE
);

Create TABLE Admin (
    Username Varchar(50) PRIMARY KEY,
    Email Varchar(255),
    PNo    Int,
    Foreign Key (Username) REFERENCES Login(Username) ON DELETE CASCADE
);

Create TABLE Company (
    Id int AUTO_INCREMENT PRIMARY KEY,
    Name Varchar(50),
    Address Varchar(500)
);

Create TABLE CR (
    Username Varchar(50) Not NULL,
    Name VARCHAR(50) NOT NULL,
    Email Varchar(255) NOT NULL,
    PNo    Int NOT NULL,
    CID int NOT NULL,
    Foreign Key (Username) REFERENCES Login(Username) ON DELETE CASCADE,
    Foreign Key (CID) REFERENCES Company(Id) ON DELETE CASCADE
);

Create table Courses (
    Code Varchar(10),
    Name Varchar(50),
    Credits int(1),
);

Create TABLE Taken (
    RollNo Int NOT NULL, 
    CourseCode Varchar(10) NOT NULL , 
    Sem Int NOT NULL,
    Grade enum("S","A","B","C","D","E"),
    Privpub BIT(1) default 0,
    Verified BIT(1) default 1,
    Primary Key (RollNo,CourseCode,Sem),
    Foreign Key (RollNo) REFERENCES Student(RollNo) ON DELETE CASCADE,
    Foreign Key (CourseCode) REFERENCES Courses(Code) ON DELETE NO ACTION,
    Foreign Key (CourseCode) REFERENCES Courses(Code) ON UPDATE CASCADE,
);

Create Table JobFields (
    Name VARCHAR(50) PRIMARY KEY,
    Descr. VARCHAR(50)
);

Create Table Postings (
    PID INT AUTO_INCREMENT PRIMARY KEY,
    CID INT NOT NULL,
    Field Varchar(50),
    Description TEXT,
    MaxStu Int,
    MinStu Int,
    Approval BIT(1),
    MaxRounds int,
    foreign key(CID) references Company(Id) ON DELETE CASCADE
    Foreign key(Field) references JobFields(Name) ON DELETE CASCADE
);


Create Table Jobs (
	JID int PRIMARY KEY,
	MaxPay Numeric(12,2),
	MinPay Numeric(12,2),
	Shift  enum("Morning","Evening","Both"),
	foreign key(JID) references PostsAvailable(PID) ON DELETE CASCADE
);

Create Table Internships (
	IID int PRIMARY KEY,
	PPO Bit(1),
	Duration integer,
	Stipend Numeric(12,2),
	foreign key(IID) references PostsAvailable(PID) ON DELETE CASCADE
);

Create Table PostProfileBranch (
	PID  int,
	Department Varchar(50),
	MinGPA Numeric(4,2),
	FOREIGN KEY(PID) references PostsAvailable(PID)  ON DELETE CASCADE	
);

Create Table PostProfileCourse (
	PID  int,
    CourseCode Varchar(10) NOT NULL , 
    Sem int,
    MinGrade Grade enum("S","A","B","C","D","E"),
	FOREIGN KEY(PID) references PostsAvailable(PID)  ON DELETE CASCADE	
);



Create Table PostsApplicants
(
	PID int ,
	RollNo int,
	RoundNo int,
	Status enum("PInterview","PDecision","Rejected","Waiting","Passed"),
	PRIMARY KEY (PID,RollNo),
	foreign key(PID) references PostsAvailable(PID) ON DELETE CASCADE,
	foreign key(RollNo) references Student(RollNo) ON DELETE CASCADE
);
/* Check if he is allowed based on slot timings */
/* create view shortlisted */

Create Table PostProcedure (
	PID int ,
	slotid int,
	RoundNo int,
	StuNo int,
	ExamType varchar(10),
	ResultDecl Bit(1),
	PRIMARY KEY (PID,RoundNo),
	Foreign key(PID) references PostsAvailable(PID) ON DELETE CASCADE
);


Create Table SlotsAvailable
(
	slotId int,
	`Date` Date NOT NULL,
	`Time` Time NOT NULL,
	`Room` Int NOT NULL,
	Primary KEY(slotId),
	UNIQUE(`Date`,`Time`,Room)
	foreign key(PID) references PostsAvailable(PID) ON DELETE SET NULL
);

Create Table SlotsAlloted (
	slotId int PRIMARY KEY,
	Booked Bit(1),
	foreign key(PID) references PostsAvailable(PID) ON DELETE SET NULL
);

Create Table offerdetails 
(
	PID int,
	RollNo int,
	Salary Numeric(12,2),
	Status enum("Accept","Decline","Pending") Default "Pending",
	`Date` Date, 
	`Time` Time,
	Primary Key (PID,RollNo),
	FOREIGN KEY(PID) references PostsAvailable(PID)  ON DELETE CASCADE,
	FOREIGN KEY(RollNo) references Student(RollNo)  ON DELETE CASCADE
);
 
Create Table Subscriptions (
CID int,
RollNo int,
PRIMARY KEY(CID,RollNo),
FOREIGN KEY(CID) references Company(Id)  ON DELETE CASCADE,
FOREIGN KEY(RollNo) references Student(RollNo)  ON DELETE CASCADE
);

/* Based on the subscriptions fill notifs */

Create Table Notifications (
Id int AUTO_INCREMENT PRIMARY KEY,
Username Varchar(50),
notify TEXT,
Category Varchar(50),
FOREIGN KEY(Username) references Login(Username)  ON DELETE CASCADE
);



Create Table Blacklist (
	Name Varchar(50),
	Address Varchar(500)
);

 


/*Views - Student jobs, Company students trigger for event*/
/* View Placed */
/*VIEW FOR FREE SLOTS*/

/* VIEW
Create Table JobsAvailable
(
    JID int PRIMARY KEY,
    MaxPay Numeric(12,2),
    MinPay Numeric(12,2),
    Shift  enum("Morning","Evening","Both"),
    foreign key(JID) references PostsAvailable(PID) ON DELETE CASCADE
);

Create Table Internships
(
    IID int PRIMARY KEY,
    PPO Bit(1),
    Duration integer,
    Stipend Numeric(12,2),
    foreign key(IID) references PostsAvailable(PID) ON DELETE CASCADE
);
*/












